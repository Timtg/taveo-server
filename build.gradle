buildscript {
	ext {
		springBootVersion = '1.4.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.2.1"
	}
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.sonarqube'
apply plugin: 'org.springframework.boot'


project.ext.libraries = [:]

project.ext.libraries.slf4j = ['org.slf4j:slf4j-api:1.7.12',
							   'org.slf4j:log4j-over-slf4j:1.7.12',
							   'org.slf4j:jcl-over-slf4j:1.7.12',
							   'ch.qos.logback:logback-classic:1.1.3']

project.ext.libraries.jms = ['org.apache.activemq:activemq-client:5.11.1', 'org.apache.geronimo.specs:geronimo-j2ee-management_1.0_spec:1.0']
project.ext.libraries.dom4j = ['dom4j:dom4j:1.6.1', 'jaxen:jaxen:1.1.1@jar']


jar {
	baseName = 'server'
	version = '0.1'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

task wrapper(type: Wrapper){
	gradleVersion = '2.9'
}

sonarqube {
	properties {
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.projectKey", "Taveo-Server"
		property "sonar.sources", "src/main/"
		property "sonar.tests", "src/test/"
		property "sonar.exclusions", "src/main/resources/public/**"
		property "sonar.java.binaries", "build/classes/main"
		property "sonar.java.test.binaries", "build/classes/test"
		property "sonar.libraries", ""
		property "sonar.host.url", "https://sonarqube.com"
		property "sonar.login", "bdb59f185e05fe44da87f828985b05941e6e76a8"
	}
}

dependencies {
	/*User/ security*/
	compile 'org.mindrot:jbcrypt:0.4'
	compile 'org.bitbucket.b_c:jose4j:0.5.4'

	/* Mail */
	compile 'org.springframework.boot:spring-boot-starter-mail'
	compile 'commons-validator:commons-validator:1.4.1'
	compile 'javax.mail:mail:1.5.0-b01'
    compile 'org.springframework.boot:spring-boot-starter-freemarker'
	compile 'com.sendgrid:sendgrid-java:3.0.9'

	/* DB */
	compile('org.springframework:spring-jdbc:4.2.4.RELEASE')
	compile('org.apache.tomcat:tomcat-jdbc:8.0.28')

	/* API / REST */
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.8.3'

	/*Other */
	compile('commons-dbcp:commons-dbcp:20030825.184428')
	compile group: 'commons-net', name: 'commons-net', version: '3.3'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
	compile 'org.apache.pdfbox:pdfbox:2.0.5'

	/* Push notifications */
	compile 'com.notnoop.apns:apns:1.0.0.Beta6'


	compile 'net.jodah:expiringmap:0.5.7'

	/* ===== ----- ===== */

	runtime('org.postgresql:postgresql')

	/* ===== ----- ===== */

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile 'org.codehaus.groovy:groovy:2.4.7'
	testCompile 'org.spockframework:spock-core:1.1-groovy-2.4-rc-3'
	testCompile 'cglib:cglib-nodep:3.2.4'
}
